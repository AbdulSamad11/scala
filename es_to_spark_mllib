//imports
import org.apache.spark.ml.regression.LinearRegression


//initiate sql context
val sqlContext = new org.apache.spark.sql.SQLContext(sc)


//loading from pc
val linear_regression_text_data = sqlContext.read.text("/home/abdul/Desktop/sample_linear_regression_data.txt")

//saving to es
linear_regression_text_data.saveToEs("sample_lin_reg")

//loading from es
val training = sqlContext.read.format("es").load("sample_lin_reg")


//model
val lr = new LinearRegression()
  .setMaxIter(10)
  .setRegParam(0.3)
  .setElasticNetParam(0.8)

// Fit the model
val lrModel = lr.fit(training)

// Print the coefficients and intercept for linear regression
println(s"Coefficients: ${lrModel.coefficients} Intercept: ${lrModel.intercept}")

// Summarize the model over the training set and print out some metrics
val trainingSummary = lrModel.summary
println(s"numIterations: ${trainingSummary.totalIterations}")
println(s"objectiveHistory: [${trainingSummary.objectiveHistory.mkString(",")}]")
trainingSummary.residuals.show()
println(s"RMSE: ${trainingSummary.rootMeanSquaredError}")
println(s"r2: ${trainingSummary.r2}")
